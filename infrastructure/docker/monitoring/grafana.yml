# Grafana configuration for LinkedIn Profiles Gallery monitoring
# Version: grafana/grafana:9.5.0

# Server configuration
server:
  http_port: 3000
  domain: monitoring.railway.app
  root_url: https://monitoring.railway.app
  serve_from_sub_path: false

# Security configuration
security:
  admin_password: ${GRAFANA_ADMIN_PASSWORD}
  secret_key: ${GRAFANA_SECRET_KEY}
  disable_gravatar: true
  cookie_secure: true
  cookie_samesite: strict
  allow_embedding: false
  strict_transport_security: true
  strict_transport_security_max_age_seconds: 31536000
  content_security_policy: true
  content_security_policy_template: "default-src 'self'; script-src 'self' 'unsafe-eval'; style-src 'self' 'unsafe-inline';"

# Authentication configuration
auth:
  disable_login_form: false
  oauth_auto_login: false
  signout_redirect_url: ""
  login_maximum_inactive_lifetime_duration: "7d"
  login_maximum_lifetime_duration: "30d"
  token_rotation_interval_minutes: 10

# Data sources configuration
datasources:
  - name: prometheus
    type: prometheus
    access: proxy
    url: http://prometheus:9090
    isDefault: true
    jsonData:
      timeInterval: "15s"
      queryTimeout: "30s"
      httpMethod: POST
      exemplarTraceIdDestinations:
        - name: trace_id
          datasourceUid: tempo
      cacheLevel: strong
      disableMetricsLookup: false
      incrementalQuerying: true
      incrementalQueryOverlapWindow: "10m"

# Dashboard configuration
dashboards:
  - name: application_metrics
    title: LinkedIn Profiles Application Metrics
    refresh: "10s"
    panels:
      - title: Response Time
        type: graph
        datasource: prometheus
        targets:
          - expr: http_request_duration_seconds
            legendFormat: "{{method}} {{path}}"
        alert:
          name: High Response Time
          conditions:
            - type: query
              query:
                params: ["A", "5m", "now"]
              reducer:
                type: avg
                params: []
              evaluator:
                type: gt
                params: [0.2]
          frequency: "1m"
          handler: 1

      - title: Error Rate
        type: graph
        datasource: prometheus
        targets:
          - expr: 'rate(http_requests_total{status=~"5.."}[5m])'
            legendFormat: "{{status}}"
        alert:
          name: High Error Rate
          conditions:
            - type: query
              query:
                params: ["A", "5m", "now"]
              reducer:
                type: sum
                params: []
              evaluator:
                type: gt
                params: [5]
          frequency: "1m"
          handler: 1

  - name: infrastructure_metrics
    title: Infrastructure Metrics
    refresh: "30s"
    panels:
      - title: Database Connections
        type: gauge
        datasource: prometheus
        targets:
          - expr: postgresql_connections
            legendFormat: Active Connections
        alert:
          name: High DB Connections
          conditions:
            - type: query
              query:
                params: ["A", "5m", "now"]
              reducer:
                type: max
                params: []
              evaluator:
                type: gt
                params: [80]
          frequency: "1m"
          handler: 1

      - title: Redis Memory Usage
        type: graph
        datasource: prometheus
        targets:
          - expr: redis_memory_used_bytes
            legendFormat: Memory Used
        alert:
          name: High Redis Memory
          conditions:
            - type: query
              query:
                params: ["A", "5m", "now"]
              reducer:
                type: last
                params: []
              evaluator:
                type: gt
                params: [268435456]
          frequency: "1m"
          handler: 1

# SMTP configuration for alerts
smtp:
  enabled: true
  host: ${SMTP_HOST}:587
  user: ${SMTP_USERNAME}
  password: ${SMTP_PASSWORD}
  from_address: ${ALERT_FROM_EMAIL}
  from_name: LinkedIn Profiles Monitoring
  startTLS_policy: mandatory
  skip_verify: false
  timeout: 30

# Alert configuration
alerting:
  enabled: true
  execute_alerts: true
  evaluation_timeout: "30s"
  notification_timeout: "30s"
  max_attempts: 3
  min_interval: "1m"
  error_or_timeout: alerting
  nodata_or_nullvalues: no_data
  concurrent_render_limit: 5